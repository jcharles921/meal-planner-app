@page
@model MealPlanner.Pages.MealSelection.WeeklyCalendarModel
@section Styles {
    <style>
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1rem;
            transition: transform 0.2s ease;
        }

        .day {
            border: 1px solid #ccc;
            padding: 1rem;
            min-height: 200px;
            background-color: #fff;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

            .day:hover {
                background-color: #f0f8ff;
                transform: scale(1.02);
            }

        .meal {
            padding: 0.5rem;
            background-color: #f5f5f5;
            margin: 0.5rem 0;
            cursor: grab;
            border-radius: 5px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .meal:active {
                cursor: grabbing;
                transform: scale(1.05);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

            .meal.dragging {
                opacity: 0.5;
                transform: scale(1.1);
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            }
    </style>
}
<h2>Weekly Calendar</h2>
<!-- Include the CSRF token -->
@Html.AntiForgeryToken()
<div class="calendar">
    @foreach (var day in Model.DaysOfWeek)
    {
        <div class="day" id="@day" data-day="@day">
            <h3>@day</h3>
            @foreach (var meal in Model.GetMealsForDay(day))
            {
                <div class="meal" data-meal-id="@meal.MealID">@meal.Name</div>
            }
        </div>
    }
</div>

<h3>Available Meals</h3>
<div id="available-meals">
    @foreach (var meal in Model.AvailableMeals)
    {
        <div class="meal" data-meal-id="@meal.MealID">@meal.Name</div>
    }
</div>

<button id="save-button" class="btn btn-primary">Save Schedule</button>

@section Scripts {
    <script>
        // Make meals draggable
        document.querySelectorAll('.meal').forEach(meal => {
            meal.draggable = true;
            meal.addEventListener('dragstart', () => {
                meal.classList.add('dragging');
            });
            meal.addEventListener('dragend', () => {
                meal.classList.remove('dragging');
            });
        });

        // Allow dropping meals into days
        document.querySelectorAll('.day').forEach(day => {
            day.addEventListener('dragover', (e) => {
                e.preventDefault();
                const dragging = document.querySelector('.dragging');
                if (day !== dragging.parentElement) {
                    day.appendChild(dragging);
                }
            });
        });

        const saveButton = document.getElementById('save-button');
        saveButton.addEventListener('click', () => {
            const schedule = [];
            document.querySelectorAll('.day').forEach(day => {
                const dayName = day.dataset.day;
                const meals = Array.from(day.querySelectorAll('.meal')).map(meal => meal.dataset.mealId);
                schedule.push({ day: dayName, meals: meals });
            });
            // Fetch CSRF token
            const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
            fetch('@Url.Page("WeeklyCalendar")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': csrfToken
                },
                body: JSON.stringify(schedule)
            }).then(response => {
                if (response.ok) {
                    alert('Schedule saved successfully!');
                } else {
                    alert('Failed to save schedule.');
                }
            });
        });
    </script>
}